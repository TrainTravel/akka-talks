akka {

  loglevel = "DEBUG"

  actor {
    provider = "cluster"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  management.http.hostname = "127.0.0.1"

  cluster {
    downing-provider-class = "com.lightbend.akka.sbr.SplitBrainResolverProvider"

    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.2:2552",
      "akka.tcp://ClusterSystem@127.0.0.3:2553"
    ]

    split-brain-resolver {
      # Select one of the available strategies (see descriptions below):
      # static-quorum, keep-majority, keep-oldest, keep-referee
      # if left "off" when the downing provider is enabled cluster startup will fail.
      active-strategy = static-quorum

      # Time margin after which shards or singletons that belonged to a downed/removed
      # partition are created in surviving partition. The purpose of this margin is that
      # in case of a network partition the persistent actors in the non-surviving partitions
      # must be stopped before corresponding persistent actors are started somewhere else.
      # This is useful if you implement downing strategies that handle network partitions,
      # e.g. by keeping the larger side of the partition and shutting down the smaller side.
      # Decision is taken by the strategy when there has been no membership or
      # reachability changes for this duration, i.e. the cluster state is stable.
      stable-after = 5s

      static-quorum {
        # minimum number of nodes that the cluster must have
        quorum-size = 3

        # if the 'role' is defined the decision is based only on members with that 'role'
        # role = ""
      }
    }
  }
}